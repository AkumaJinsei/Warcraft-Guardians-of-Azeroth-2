namespace = WCDRA

### Destroy the Dark Portal on siege
WCDRA.3 = {
	type = character_event
	title = WCDRA_5_TITLE
	desc = WCDRA_3_DESC
	theme = war
	override_background = {
		reference = wc_background_dark_portal
	}
	left_portrait = {
		character = root
		animation = war_over_win
	}
	
	trigger = {
		# To not spam with this
		NOT = { has_character_flag = refused_destroy_dark_portal_flag }
		
		can_destroy_dark_portal_trigger = yes
	}
	
	option = {
		name = WCDRA_3_OPT_A
		
		destroy_dark_portal_effect = yes
		
		ai_chance = { base = 10 }
	}
	option = {
		name = WCDRA_3_OPT_B
		
		add_character_flag = { flag = refused_destroy_dark_portal_flag years = 3 }
		
		ai_chance = { base = 0 }
	}
}

### Destorys the Dark Portal
WCDRA.5 = {
	type = character_event
	title = WCDRA_5_TITLE
	desc = WCDRA_5_DESC
	theme = war
	override_background = {
		reference = wc_background_dark_portal
	}
	left_portrait = {
		character = scope:portal_destroyer
		animation = war_over_win
	}
	
	immediate = {
		show_as_tooltip = {
			destroy_dark_portal_effect = yes
		}
	}
	
	option = {
		# We used to call it home...
		name = {
			text = {
				first_valid = {
					# We used to call it home...
					triggered_desc = {
						trigger = {
							draenor_culture_trigger = yes
							draenor_faith_trigger = yes
						}
						desc = WCDRA_5_OPT_A
					}
					# What a loss.
					triggered_desc = {
						trigger = {
							OR = {
								draenor_culture_trigger = yes
								draenor_faith_trigger = yes
							}
						}
						desc = WCDRA_5_OPT_B
					}
					#And may it never open again.
					desc = WCDRA_5_OPT_C
				}
			}
		}
	}
}

### Reopens the Dark Portal
WCDRA.25 = {
	type = character_event
	title = WCDRA_25_TITLE
	desc = WCDRA_25_DESC
	theme = war
	override_background = {
		reference = wc_background_dark_portal
	}
	left_portrait = {
		character = scope:portal_reopener
		animation = war_over_win
	}
	
	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							draenor_culture_trigger = yes
							draenor_faith_trigger = yes
						}
						desc = WCDRA_25_OPT_A_very_positive
					}
					triggered_desc = {
						trigger = {
							OR = {
								draenor_culture_trigger = yes
								draenor_faith_trigger = yes
							}
						}
						desc = WCDRA_25_OPT_A_positive
					}
					desc = WCDRA_25_OPT_A_negative
				}
			}
		}
	}
}

### Draenor refugees come
# Picks ruler who caughs refugees
WCDRA.95 = {
	type = empty
	hidden = yes
	
	immediate = {
		random_county_in_region = {
			region = world_eastern_kingdoms_azeroth_black_morass
			holder = { trigger_event = WCDRA.100 }
		}
	}
}
# Main event
WCDRA.100 = {
	type = character_event
	title = WCDRA_100_TITLE
	desc = {
		desc = WCDRA_100_DESC
		triggered_desc = {
			trigger = { scope:refugee = { culture_group = culture_group:draenei_group } }
			desc = WCDRA_100_DESC_draenei
		}
		triggered_desc = {
			trigger = {
				scope:refugee = {
					OR = {
						culture_group = culture_group:ogre_group
						culture_group = culture_group:orc_group
					}
				}
			}
			desc = WCDRA_100_DESC_village
		}
		triggered_desc = {
			trigger = { scope:refugee = { culture_group = culture_group:arakkoa_group } }
			desc = WCDRA_100_DESC_arakkoa
		}
		desc = WCDRA_100_DESC_ending
	}
	theme = dungeon
	left_portrait = {
		character = scope:refugee
		animation = worry
	}
	
	immediate = {
		random_list = {
			5 = {
				create_character = {
					save_scope_as = refugee
					location = root.capital_province
					template = draenor_draenei_refugee
					dynasty = none
				}
				draenei_chance_modifiers = yes
			}
			10 = {
				create_character = {
					save_scope_as = refugee
					location = root.capital_province
					template = draenor_arakkoa_refugee
					dynasty = none
				}
				arakkoa_chance_modifiers = yes
			}
			10 = {
				create_character = {
					save_scope_as = refugee
					location = root.capital_province
					template = draenor_ogre_refugee
					dynasty = none
				}
				ogre_chance_modifiers = yes
			}
			20 = {
				create_character = {
					save_scope_as = refugee
					location = root.capital_province
					template = draenor_orc_refugee
					dynasty = none
				}
				orc_chance_modifiers = yes
			}
		}
		
		hidden_effect = {
			add_visiting_courtier = scope:refugee
			add_opinion = { modifier = crossed_dark_portal target = scope:refugee }
		}
	}
	
	# Let them stay
	option = {
		name = WCDRA_100_OPT_A
		
		stress_impact = {
			compassionate = minor_stress_impact_loss
			callous = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		
		recruit_courtier = scope:refugee
		remove_opinion = { modifier = crossed_dark_portal target = scope:refugee }
		
		ai_chance = {
			base = 200
			# Stress
			modifier = {
				add = { value = 0 subtract = minor_stress_impact_loss }
				has_trait = compassionate
			}
			modifier = {
				add = { value = 0 subtract = minor_stress_impact_gain }
				has_trait = callous
			}
			modifier = {
				add = { value = 0 subtract = minor_stress_impact_gain }
				has_trait = paranoid
			}
			modifier = {
				add = { value = 0 subtract = minor_stress_impact_gain }
				has_trait = sadistic
			}
			
			# Opinion
			opinion_modifier = {
				opinion_target = scope:refugee
				multiplier = 1
			}
		}
	}
	# Get out of my sight
	option = {
		name = WCDRA_100_OPT_B
		
		stress_impact = {
			generous = minor_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
		
		scope:refugee = { select_and_move_to_pool_effect = yes }
		
		ai_chance = {
			base = 100
			# Stress
			modifier = {
				add = { value = 0 subtract = minor_stress_impact_gain }
				has_trait = generous
			}
			modifier = {
				add = { value = 0 subtract = medium_stress_impact_gain }
				has_trait = compassionate
			}
		}
	}
	# Guards, take them to jail
	option = {
		name = WCDRA_100_OPT_C
		
		stress_impact = {
			generous = medium_stress_impact_gain
			compassionate = major_stress_impact_gain
		}
		
		imprison_character_effect = {
			TARGET = scope:refugee
			IMPRISONER = root
		}
		
		ai_chance = {
			base = 100
			# Stress
			modifier = {
				add = { value = 0 subtract = medium_stress_impact_gain }
				has_trait = generous
			}
			modifier = {
				add = { value = 0 subtract = major_stress_impact_gain }
				has_trait = compassionate
			}
		}
	}
}